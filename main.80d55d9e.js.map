{"version":3,"sources":["scripts/main.js"],"names":["body","document","newForm","createElement","className","innerHTML","append","activeRow","table","querySelector","form","buttonForm","tableHead","tableHeadColumns","querySelectorAll","tableContent","rows","activeCell","sort","salaryToNumber","salary","split","join","replace","sortTable","array","key","sortingDirection","sortKey","typeField","a","b","localeCompare","x","y","rowSelect","addEventListener","events","undefined","path","currentCell","target","oldText","textContent","columName","cellIndex","toLowerCase","inputField","value","dataset","qa","e","trim","valid","validateValue","bitRate","newText","remove","colum","validValue","length","message","isNaN","type","stage","description","classMessage","title","messageBlock","insertAdjacentHTML","setTimeout","sum","arr","j","toString","step","unshift","substr","forEach","tableHeadColum","tableArr","row","rowObj","i","children","salary2","Salary","Age","push","after","trElement","Name","Position","Office","preventDefault","formInputs","formInput","newRow","selectedIndex"],"mappings":";AAAA,aAgTC,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9SD,IAAMA,EAAOC,SAASD,KAEhBE,EAAUD,SAASE,cAAc,QAEvCD,EAAQE,UAAY,oBAEpBF,EAAQG,UAAR,23BA8BAL,EAAKM,OAAOJ,GAEZ,IAOIK,EAPEC,EAAQP,SAASQ,cAAc,SAC/BC,EAAOT,SAASQ,cAAc,QAC9BE,EAAaD,EAAKD,cAAc,UAChCG,EAAYX,SAASQ,cAAc,SACnCI,EAAmBD,EAAUE,iBAAiB,MAChDC,EAAed,SAASQ,cAAc,SACtCO,EAAOD,EAAaD,iBAAiB,MAErCG,GAAa,EACXC,EAAO,GAEPC,EAAiB,SAACC,GAAW,OAACA,EAAOC,MAAM,KAAKC,KAAK,IAAIC,QAAQ,IAAK,KAmD5E,SAASC,EAAUC,EAAOC,GAClBC,IAAAA,EAAmBT,EAAKQ,GACxBE,EAAmB,WAARF,EAAoB,UAAYA,EAC3CG,EAAoBJ,EAAAA,EAAM,GAAGG,IAEV,QAArBD,GACgB,WAAdE,EACFJ,EAAMP,KAAK,SAACY,EAAGC,GAAMD,OAAAA,EAAEF,GAASI,cAAcD,EAAEH,MAEhDH,EAAMP,KAAK,SAACe,EAAGC,GAAMD,OAAAA,EAAEL,GAAWM,EAAEN,KAEtCV,EAAKQ,GAAO,SAEM,WAAdG,EACFJ,EAAMP,KAAK,SAACY,EAAGC,GAAMA,OAAAA,EAAEH,GAASI,cAAcF,EAAEF,MAEhDH,EAAMP,KAAK,SAACe,EAAGC,GAAMA,OAAAA,EAAEN,GAAWK,EAAEL,KAEtCV,EAAKQ,GAAO,OAMhB,SAASS,IACPpB,EAAaqB,iBAAiB,QAAS,SAACC,QACpBC,IAAd/B,IACFA,EAAUH,UAAY,KAExBG,EAAY8B,EAAOE,KAAK,IACdnC,UAAY,WAGxBW,EAAaqB,iBAAiB,WAAY,SAACC,GACrC,IAACpB,EAAY,CACTuB,IAAAA,EAAcH,EAAOI,OACrBC,EAAUF,EAAYG,YACtBC,EAAY/B,EAAiBwB,EAAOI,OAAOI,WAC9CF,YAAYG,cAEfN,EAAYG,YAAc,GAC1B1B,GAAa,EAEP8B,IAAAA,EAAa9C,SAASE,cAAc,SAE1C4C,EAAWC,MAAQN,EACnBK,EAAWE,QAAQC,GAAKN,EAEM,WAA1BG,EAAWE,QAAQC,KACrBH,EAAWC,MAAQ7B,EAAe4B,EAAWC,QAG/CR,EAAYlC,OAAOyC,GAEnBA,EAAWX,iBAAiB,WAAY,SAACe,GACnCA,GAAU,UAAVA,EAAEzB,IAAiB,CACrBqB,EAAWC,MAAQD,EAAWC,MAAMI,OAEhCC,IAAAA,GAAQ,EAIRA,GAFJA,EAAQC,EAAcP,EAAWC,MAAOD,EAAWE,QAAQC,GAAIG,GAEpD,CACqB,WAA1BN,EAAWE,QAAQC,KACrBH,EAAWC,MAAQO,EAAQR,EAAWC,QAGlCQ,IAAAA,EAAgC,KAArBT,EAAWC,MACxBN,EACAK,EAAWC,MAEfD,EAAWU,SACXjB,EAAYG,YAAca,EAC1BvC,GAAa,SA4CzB,SAASqC,EAAcN,EAAOU,EAAOC,GAC/B,GAACA,EAAD,CAIAN,IAAAA,EAAQM,EA4BLN,MA1BO,SAAVK,GAAoBV,EAAMY,OAAS,GAErCC,EADAR,GAAQ,EACO,OAAQ,sCAGX,aAAVK,GAAkC,KAAVV,GAE1Ba,EADAR,GAAQ,EACO,WAAY,kCAGf,QAAVK,IAAoBV,EAAQ,IAAMA,EAAQ,KAE5Ca,EADAR,GAAQ,EACO,MAAO,6CAGV,WAAVK,GAAgC,KAAVV,GAExBa,EADAR,GAAQ,EACO,SAAU,mCAGZ,QAAVK,GAA6B,WAAVA,IACnBL,GAASS,OAAOd,IAEnBa,EADAR,GAAQ,EACOK,EAAUA,GAAAA,OAAAA,EAAzB,oBAGKL,GAGT,SAASQ,EAAQE,GAAMC,IAAAA,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAAMC,EAAa,UAAA,OAAA,EAAA,UAAA,QAAA,EAC1CC,EAAgBH,EAAQ,UAAY,QACpCI,EAAmB,OAAVH,EAAkB,GAAuBA,kBAAAA,OAAAA,GAClDI,EAAenE,SAASE,cAAc,OAE5CiE,EAAahE,UAA4B8D,gBAAAA,OAAAA,GACzCE,EAAanB,QAAQC,GAAK,eAE1BkB,EAAaC,mBAAmB,YAE1BF,qBAAAA,OAAAA,EAGAF,gCAAAA,OAAAA,EALN,eAQAG,EAAa/D,UAEP8D,mCAAAA,OAAAA,EAGAF,gCAAAA,OAAAA,EALN,cAQAjE,EAAKM,OAAO8D,GAEZE,WAAW,WACTF,EAAaX,UACZ,KAEH9C,EAAWyB,iBAAiB,WAAY,WACtCgC,EAAaX,WAIjB,SAASF,EAAQgB,GAGV,IAFCC,IAAAA,EAAM,GAEHC,EAAIF,EAAIG,WAAWd,OAAQa,EAAI,EAAGA,GAAQ,EAAG,CAChDE,IAAAA,EAAO,EAEPF,EAAI,IACNE,EAAOF,GAGTD,EAAII,QAAQL,EAAIG,WAAWG,OAAOJ,EAAIE,EAAMA,IAGnCH,MAAAA,IAAAA,OAAAA,EAAIlD,KAAK,MA1PtBT,EAAiBiE,QAAQ,SAACC,GACxB7D,EAAK6D,EAAepC,aAAe,QAGrC/B,EAAUwB,iBAAiB,QAAS,SAACC,GACnCtB,EAAed,SAASQ,cAAc,SACtCO,EAAOD,EAAaD,iBAAiB,MAE/BkE,IAAAA,EAAW,GACXpD,EAAUS,EAAOI,OAAOE,YAE9B3B,EAAK8D,QAAQ,SAACG,GACNC,IADc,EACdA,EAAS,GAEXC,EAAI,EAEqBtE,EAAAA,EAAAA,GALT,IAK2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAG7CqE,EAH6C,EAAA,MAClBvC,aAEbsC,EAAIG,SAASD,GAAGxC,YAC9BwC,KATkB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAYpBD,EAAOG,QAAUlE,EAAe+D,EAAOI,QACvCJ,EAAOK,KAAOL,EAAOK,IACrBP,EAASQ,KAAKN,KAGhB1D,EAAUwD,EAAUpD,GACpBb,EAAa0C,SAEb1C,EAAed,SAASE,cAAc,SAEtCK,EAAM4E,SAAS,GAAGK,MAAM1E,GAExBiE,EAASF,QAAQ,SAACG,GACVS,IAAAA,EAAYzF,SAASE,cAAc,MAEzCuF,EAAUrB,mBAAmB,YACrBY,eAAAA,OAAAA,EAAIU,KACJV,qBAAAA,OAAAA,EAAIW,SACJX,qBAAAA,OAAAA,EAAIY,OACJZ,qBAAAA,OAAAA,EAAIM,IACJN,qBAAAA,OAAAA,EAAIK,OALZ,UAMAvE,EAAaT,OAAOoF,GACpBvD,QA0BJA,IA2DAxB,EAAWyB,iBAAiB,QAAS,SAACC,GACpCA,EAAOyD,iBAEDC,IAAAA,EAAarF,EAAKI,iBAAiB,SAErCuC,GAAQ,EAMRA,GAJJ0C,EAAWjB,QAAQ,SAACkB,GAClB3C,EAAQC,EAAc0C,EAAUhD,MAAOgD,EAAU/C,QAAQC,GAAIG,KAG3DA,EAAO,CACH4C,IAAAA,EAAShG,SAASE,cAAc,MAEtC8F,EAAO5B,mBAAmB,YAClB3D,eAAAA,OAAAA,EAAK,GAAGsC,MACRtC,qBAAAA,OAAAA,EAAK,GAAGsC,MACRtC,qBAAAA,OAAAA,EAAK,GAAGsC,MACRtC,qBAAAA,OAAAA,EAAK,GAAGsC,MACRO,qBAAAA,OAAAA,EAAQ7C,EAAK,GAAGsC,OALxB,gBAQAjC,EAAaT,OAAO2F,GACpBlF,EAAed,SAASQ,cAAc,SACtCO,EAAOD,EAAaD,iBAAiB,MAErCJ,EAAK,GAAGsC,MAAQ,GAChBtC,EAAK,GAAGsC,MAAQ,GAChBtC,EAAK,GAAGwF,cAAgB,EACxBxF,EAAK,GAAGsC,MAAQ,GAChBtC,EAAK,GAAGsC,MAAQ,GAEhBa,EAAQR,EAAO,KAAM","file":"main.80d55d9e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.body;\n\nconst newForm = document.createElement('form');\n\nnewForm.className = 'new-employee-form';\n\nnewForm.innerHTML = `\n  <label for=\"name\">Name:\n    <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n  </label>\n\n  <label for=\"position\">Position:\n    <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n  </label>\n\n  <label for=\"office\">Office:\n    <select name=\"office\" data-qa=\"office\" required>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n\n  <label for=\"age\">Age:\n    <input name=\"number\" type=\"number\" data-qa=\"age\" required>\n  </label>\n\n  <label for=\"salary\">Salary\n    <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n  </label>\n\n  <button>Save to table</button>\n`;\nbody.append(newForm);\n\nconst table = document.querySelector('table');\nconst form = document.querySelector('form');\nconst buttonForm = form.querySelector('button');\nconst tableHead = document.querySelector('thead');\nconst tableHeadColumns = tableHead.querySelectorAll('th');\nlet tableContent = document.querySelector('tbody');\nlet rows = tableContent.querySelectorAll('tr');\nlet activeRow;\nlet activeCell = false;\nconst sort = {};\n\nconst salaryToNumber = (salary) => +salary.split(',').join('').replace('$', '');\n\ntableHeadColumns.forEach((tableHeadColum) => {\n  sort[tableHeadColum.textContent] = 'ASC';\n});\n\ntableHead.addEventListener('click', (events) => {\n  tableContent = document.querySelector('tbody');\n  rows = tableContent.querySelectorAll('tr');\n\n  const tableArr = [];\n  const sortKey = events.target.textContent;\n\n  rows.forEach((row) => {\n    const rowObj = {};\n\n    let i = 0;\n\n    for (const tableHeadColum of tableHeadColumns) {\n      const key = tableHeadColum.textContent;\n\n      rowObj[key] = row.children[i].textContent;\n      i++;\n    };\n\n    rowObj.salary2 = salaryToNumber(rowObj.Salary);\n    rowObj.Age = +rowObj.Age;\n    tableArr.push(rowObj);\n  });\n\n  sortTable(tableArr, sortKey);\n  tableContent.remove();\n\n  tableContent = document.createElement('tbody');\n\n  table.children[0].after(tableContent);\n\n  tableArr.forEach((row) => {\n    const trElement = document.createElement('tr');\n\n    trElement.insertAdjacentHTML('beforeend', `\n      <td>${row.Name}</td>\n      <td>${row.Position}</td>\n      <td>${row.Office}</td>\n      <td>${row.Age}</td>\n      <td>${row.Salary}</td>`);\n    tableContent.append(trElement);\n    rowSelect();\n  });\n});\n\nfunction sortTable(array, key) {\n  const sortingDirection = sort[key];\n  const sortKey = (key === 'Salary') ? 'salary2' : key;\n  const typeField = typeof (array[0][sortKey]);\n\n  if (sortingDirection === 'ASC') {\n    if (typeField === 'string') {\n      array.sort((a, b) => a[sortKey].localeCompare(b[sortKey]));\n    } else {\n      array.sort((x, y) => x[sortKey] - y[sortKey]);\n    }\n    sort[key] = 'DESC';\n  } else {\n    if (typeField === 'string') {\n      array.sort((a, b) => b[sortKey].localeCompare(a[sortKey]));\n    } else {\n      array.sort((x, y) => y[sortKey] - x[sortKey]);\n    }\n    sort[key] = 'ASC';\n  };\n};\n\nrowSelect();\n\nfunction rowSelect() {\n  tableContent.addEventListener('click', (events) => {\n    if (activeRow !== undefined) {\n      activeRow.className = '';\n    }\n    activeRow = events.path[1];\n    activeRow.className = 'active';\n  });\n\n  tableContent.addEventListener('dblclick', (events) => {\n    if (!activeCell) {\n      const currentCell = events.target;\n      const oldText = currentCell.textContent;\n      const columName = tableHeadColumns[events.target.cellIndex]\n        .textContent.toLowerCase();\n\n      currentCell.textContent = '';\n      activeCell = true;\n\n      const inputField = document.createElement('input');\n\n      inputField.value = oldText;\n      inputField.dataset.qa = columName;\n\n      if (inputField.dataset.qa === 'salary') {\n        inputField.value = salaryToNumber(inputField.value);\n      };\n\n      currentCell.append(inputField);\n\n      inputField.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') {\n          inputField.value = inputField.value.trim();\n\n          let valid = true;\n\n          valid = validateValue(inputField.value, inputField.dataset.qa, valid);\n\n          if (valid) {\n            if (inputField.dataset.qa === 'salary') {\n              inputField.value = bitRate(inputField.value);\n            };\n\n            const newText = (inputField.value === '')\n              ? oldText\n              : inputField.value;\n\n            inputField.remove();\n            currentCell.textContent = newText;\n            activeCell = false;\n          }\n        };\n      });\n    };\n  });\n}\n\nbuttonForm.addEventListener('click', (events) => {\n  events.preventDefault();\n\n  const formInputs = form.querySelectorAll('input');\n\n  let valid = true;\n\n  formInputs.forEach((formInput) => {\n    valid = validateValue(formInput.value, formInput.dataset.qa, valid);\n  });\n\n  if (valid) {\n    const newRow = document.createElement('tr');\n\n    newRow.insertAdjacentHTML('beforeend', `\n      <td>${form[0].value}</td>\n      <td>${form[1].value}</td>\n      <td>${form[2].value}</td>\n      <td>${form[3].value}</td>\n      <td>${bitRate(form[4].value)}</td>\n    `);\n\n    tableContent.append(newRow);\n    tableContent = document.querySelector('tbody');\n    rows = tableContent.querySelectorAll('tr');\n\n    form[0].value = '';\n    form[1].value = '';\n    form[2].selectedIndex = 0;\n    form[3].value = '';\n    form[4].value = '';\n\n    message(valid, null, 'Add a new employee to the table');\n  }\n});\n\nfunction validateValue(value, colum, validValue) {\n  if (!validValue) {\n    return;\n  };\n\n  let valid = validValue;\n\n  if (colum === 'name' && value.length < 4) {\n    valid = false;\n    message(valid, 'Name', 'Name value has less than 4 letters');\n  }\n\n  if (colum === 'position' && value === '') {\n    valid = false;\n    message(valid, 'Position', 'The field must be it is filled');\n  };\n\n  if (colum === 'age' && (value < 18 || value > 90)) {\n    valid = false;\n    message(valid, 'Age', 'Age value is less than 18 or more than 90');\n  };\n\n  if (colum === 'salary' && value === '') {\n    valid = false;\n    message(valid, 'Salary', 'The field must be it is filled');\n  };\n\n  if ((colum === 'age' || colum === 'salary')\n    && valid && isNaN(+value)) {\n    valid = false;\n    message(valid, colum, `${colum} must be number`);\n  };\n\n  return valid;\n}\n\nfunction message(type, stage = null, description) {\n  const classMessage = (type) ? 'success' : 'error';\n  const title = (stage === null) ? '' : `Error in field ${stage}`;\n  const messageBlock = document.createElement('div');\n\n  messageBlock.className = `notification ${classMessage}`;\n  messageBlock.dataset.qa = 'notification';\n\n  messageBlock.insertAdjacentHTML('beforeend', `\n    <h2>\n      ${title}\n    </h2>\n    <p>\n      ${description}\n    </p>`);\n\n  messageBlock.innerHTML = `\n    <h2 class=\"title\">\n      ${title}\n    </h2>\n    <p>\n      ${description}\n    </p>`;\n\n  body.append(messageBlock);\n\n  setTimeout(() => {\n    messageBlock.remove();\n  }, 3000);\n\n  buttonForm.addEventListener('mouseout', () => {\n    messageBlock.remove();\n  });\n};\n\nfunction bitRate(sum) {\n  const arr = [];\n\n  for (let j = sum.toString().length; j > 0; j = j - 3) {\n    let step = 3;\n\n    if (j < 3) {\n      step = j;\n    };\n\n    arr.unshift(sum.toString().substr(j - step, step));\n  };\n\n  return `$${arr.join(',')}`;\n}\n"]}